name: CI

on: push

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm i --no-frozen-lockfile

  jest:
    needs: [setup]
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm i --no-frozen-lockfile

      - name: run jest
        run: pnpm jest --maxWorkers=2 --reporters="github-actions" --coverage

      - uses: actions/upload-artifact@v3
        with:
          name: jest-coverage
          path: ./coverage

  component-test:
    needs: [setup]
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm i --no-frozen-lockfile

      - name: Cache Playwright
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install the operating-system dependencies for Playwright
        run: pnpm playwright install --with-deps chromium
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Cache for storybook build
        uses: actions/cache@v3
        with:
          path: './node_modules/.cache'
          key: ${{ runner.os }}-storybook-build-cache

      - name: Build Storybook
        run: pnpm build-storybook

      - name: Run Storybook tests
        run: pnpm ci-test-storybook

      - uses: actions/upload-artifact@v3
        with:
          name: storybook-coverage-json
          path: ./coverage/storybook/coverage-storybook.json

  reports:
    needs: [jest, component-test]
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm i --no-frozen-lockfile

      - uses: actions/download-artifact@v3
        with:
          name: jest-coverage
          path: ./coverage

      - uses: actions/download-artifact@v3
        with:
          name: storybook-coverage-json
          path: ./coverage/coverage-storybook.json

      - name: merge coverage
        run: pnpm nyc report --reporter=html --reporter=lcov -t coverage --report-dir coverage

      - name: output coverage
        run: |
          echo "# Test Coverage :rocket:" >> $GITHUB_STEP_SUMMARY
          pnpm nyc report -t ./coverage >> $GITHUB_STEP_SUMMARY

      - uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: ./coverage
